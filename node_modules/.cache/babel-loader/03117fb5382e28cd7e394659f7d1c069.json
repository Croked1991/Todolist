{"ast":null,"code":"var _jsxFileName = \"/Users/egortihomirov/Desktop/IT/react/todolist_project/src/Todolist.tsx\";\nimport React from 'react';\nimport { AddItemForm } from './components/AddItemForm';\nimport { UniButton } from './components/Button';\nimport { Checkbox } from './components/Checkbox';\nimport style from './Todolist.module.css';\nexport function Todolist(props) {\n  const removeTaskHandler = elid => {\n    props.removeTasks(props.todolistID, elid);\n  };\n\n  const filterHandler = filterValue => {\n    props.taskFilter(props.todolistID, filterValue);\n  };\n\n  const checkboxHandler = (currentId, currentEvent) => {\n    props.changeCheckboxStatus(props.todolistID, currentId, currentEvent);\n  };\n\n  const removeTodolistHandler = () => {\n    props.removeTodolist(props.todolistID);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, props.title, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: removeTodolistHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(AddItemForm, {\n    addTask: props.addTask,\n    todolistID: props.todolistID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, props.prokladka.map(el => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: el.id,\n      className: el.isDone === true ? style.isDone : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      check: el.isDone,\n      callBack: currentEvent => checkboxHandler(el.id, currentEvent),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, el.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => removeTaskHandler(el.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }, \"X\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UniButton, {\n    filterButton: props.filterButton,\n    filterHandler: filterHandler,\n    buttons: props.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/egortihomirov/Desktop/IT/react/todolist_project/src/Todolist.tsx"],"names":["React","AddItemForm","UniButton","Checkbox","style","Todolist","props","removeTaskHandler","elid","removeTasks","todolistID","filterHandler","filterValue","taskFilter","checkboxHandler","currentId","currentEvent","changeCheckboxStatus","removeTodolistHandler","removeTodolist","title","addTask","prokladka","map","el","id","isDone","filterButton","buttons"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AA+BA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAoC;AAEvC,QAAMC,iBAAiB,GAAIC,IAAD,IAAkB;AACxCF,IAAAA,KAAK,CAACG,WAAN,CAAkBH,KAAK,CAACI,UAAxB,EAAmCF,IAAnC;AACH,GAFD;;AAIA,QAAMG,aAAa,GAAIC,WAAD,IAAmC;AACrDN,IAAAA,KAAK,CAACO,UAAN,CAAiBP,KAAK,CAACI,UAAvB,EAAmCE,WAAnC;AACH,GAFD;;AAIA,QAAME,eAAe,GAAG,CAACC,SAAD,EAAoBC,YAApB,KAA8C;AAClEV,IAAAA,KAAK,CAACW,oBAAN,CAA2BX,KAAK,CAACI,UAAjC,EAA6CK,SAA7C,EAAwDC,YAAxD;AACH,GAFD;;AAIA,QAAME,qBAAqB,GAAG,MAAM;AAChCZ,IAAAA,KAAK,CAACa,cAAN,CAAqBb,KAAK,CAACI,UAA3B;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACc,KADX,eAEI;AAAQ,IAAA,OAAO,EAAEF,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CADJ,eAMA,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEZ,KAAK,CAACe,OAA5B;AAAqC,IAAA,UAAU,EAAEf,KAAK,CAACI,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACgB,SAAN,CAAgBC,GAAhB,CAAqBC,EAAD,IAAkB;AACnC,wBACI;AAAI,MAAA,GAAG,EAAEA,EAAE,CAACC,EAAZ;AAAgB,MAAA,SAAS,EAAED,EAAE,CAACE,MAAH,KAAc,IAAd,GAAqBtB,KAAK,CAACsB,MAA3B,GAAmC,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,EAAE,CAACE,MAApB;AAA4B,MAAA,QAAQ,EAAGV,YAAD,IAAgBF,eAAe,CAACU,EAAE,CAACC,EAAJ,EAAQT,YAAR,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOQ,EAAE,CAACJ,KAAV,CAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMb,iBAAiB,CAACiB,EAAE,CAACC,EAAJ,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CADJ;AAOH,GARA,CADL,CARJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEnB,KAAK,CAACqB,YAA/B;AAA6C,IAAA,aAAa,EAAEhB,aAA5D;AAA2E,IAAA,OAAO,EAAEL,KAAK,CAACsB,OAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAnBJ,CADJ,CADJ;AA2BH","sourcesContent":["import { type } from 'os';\nimport React from 'react';\nimport { useState, KeyboardEvent, ChangeEvent } from 'react';\nimport { FilterValuesType } from './App';\nimport { AddItemForm } from './components/AddItemForm';\nimport { UniButton } from './components/Button';\nimport { Checkbox } from './components/Checkbox';\nimport style from './Todolist.module.css'\n\nexport type TodolistIDType = {\n    [todolistID:string]:TaskType[]\n}\n\nexport type TaskType = {\n    title: string;\n    id: string;\n    isDone: boolean;\n}\n\nexport type ButtonType = {\n    id: string\n    title: string\n}\n\ntype PropsType = {\n    title: string;\n    tasks: TodolistIDType;\n    removeTasks: (todolistID:string, id: string) => void;\n    taskFilter: (todolistID:string,filterValue: FilterValuesType) => void;\n    prokladka: Array<TaskType>;\n    addTask: (todolistID:string, newTask: string) => void;\n    changeCheckboxStatus: (todolistID:string, currentId: string, eventStatus: boolean) => void\n    filterButton: FilterValuesType \n    buttons: ButtonType[]\n    todolistID : string\n    removeTodolist: (todolistID:string)=>void\n}\n\nexport function Todolist(props: PropsType) {\n\n    const removeTaskHandler = (elid: string) => {\n        props.removeTasks(props.todolistID,elid)\n    }\n\n    const filterHandler = (filterValue: FilterValuesType) => {\n        props.taskFilter(props.todolistID, filterValue)\n    }\n\n    const checkboxHandler = (currentId: string, currentEvent: boolean) => {\n        props.changeCheckboxStatus(props.todolistID, currentId, currentEvent)\n    }\n\n    const removeTodolistHandler = () => {\n        props.removeTodolist(props.todolistID)\n    }\n\n\n    return (\n        <div className=\"App\">\n            <div>\n                <h3>\n                    {props.title}\n                    <button onClick={removeTodolistHandler}>X</button>\n                </h3>\n               \n            <AddItemForm addTask={props.addTask} todolistID={props.todolistID}/>\n            {/* место для инпута*/}\n                <ul >\n                    {props.prokladka.map((el: TaskType) => {\n                        return (\n                            <li key={el.id} className={el.isDone === true ? style.isDone: \"\"}>\n                                <Checkbox check={el.isDone} callBack={(currentEvent)=>checkboxHandler(el.id, currentEvent)}/>\n                                <span>{el.title}</span>\n                                <button onClick={() => removeTaskHandler(el.id)}>X</button>\n                            </li>\n                        )\n                    })}\n                </ul>\n                <div>\n                    <UniButton filterButton={props.filterButton} filterHandler={filterHandler} buttons={props.buttons}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}