{"ast":null,"code":"var _jsxFileName = \"/Users/egortihomirov/Desktop/IT/react/todolist_project/src/App.tsx\";\nimport React, { useState } from 'react';\nimport { v1 } from 'uuid';\nimport './App.css';\nimport { Todolist } from './Todolist';\n\nfunction App() {\n  let prokladka = tasks;\n\n  if (filterButton === 'Active') {\n    prokladka = tasks.filter(el => el.isDone === false);\n  }\n\n  if (filterButton === 'Complited') {\n    prokladka = tasks.filter(el => el.isDone === true);\n  }\n\n  const [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"React\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest Api\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n\n  const removeTasks = id => {\n    let filtered = tasks.filter(el => el.id !== id);\n    setTasks(filtered);\n  };\n\n  const addTask = newTask => {\n    let newTitle = {\n      id: v1(),\n      title: newTask,\n      isDone: false\n    };\n    setTasks([newTitle, ...tasks]);\n  };\n\n  const [filterButton, setFilterButton] = useState('All');\n\n  const taskFilter = filterValue => {\n    setFilterButton(filterValue);\n  };\n\n  const changeCheckboxStatus = (currentId, currentEvent) => {\n    setTasks(tasks.map(el => el.id === currentId ? { ...el,\n      isDone: currentEvent\n    } : el));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Todolist, {\n    title: \"What do lern\",\n    tasks: tasks,\n    removeTasks: removeTasks,\n    taskFilter: taskFilter,\n    prokladka: prokladka,\n    addTask: addTask,\n    changeCheckboxStatus: changeCheckboxStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/egortihomirov/Desktop/IT/react/todolist_project/src/App.tsx"],"names":["React","useState","v1","Todolist","App","prokladka","tasks","filterButton","filter","el","isDone","setTasks","id","title","removeTasks","filtered","addTask","newTask","newTitle","setFilterButton","taskFilter","filterValue","changeCheckboxStatus","currentId","currentEvent","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { v1 } from 'uuid';\r\nimport './App.css';\r\nimport { Todolist } from './Todolist';\r\n\r\n\r\nfunction App() {\r\n\r\n    let prokladka = tasks\r\n    if (filterButton === 'Active') {\r\n        prokladka = tasks.filter(el => el.isDone === false)\r\n    }\r\n    if (filterButton === 'Complited') {\r\n        prokladka = tasks.filter(el => el.isDone === true)\r\n    }\r\n\r\n\r\n    const [tasks, setTasks] = useState([\r\n        { id: v1(), title: \"CSS\", isDone: true },\r\n        { id: v1(), title: \"JS\", isDone: true },\r\n        { id: v1(), title: \"React\", isDone: false },\r\n        { id: v1(), title: \"Rest Api\", isDone: false },\r\n        { id: v1(), title: \"GraphQL\", isDone: false },\r\n    ])\r\n\r\n    const removeTasks = (id: string) => {\r\n        let filtered = tasks.filter(el => el.id !== id)\r\n        setTasks(filtered)\r\n    }\r\n\r\n    const addTask = (newTask: string) => {\r\n        let newTitle = { id: v1(), title: newTask, isDone: false }\r\n        setTasks([newTitle, ...tasks]);\r\n    }\r\n\r\n\r\n\r\n    const [filterButton, setFilterButton] = useState('All')\r\n    const taskFilter = (filterValue: string) => {\r\n        setFilterButton(filterValue)\r\n    }\r\n\r\n    const changeCheckboxStatus = (currentId: string, currentEvent: boolean) => {\r\n        setTasks(tasks.map((el) => el.id === currentId ? { ...el, isDone: currentEvent } : el))\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <Todolist title=\"What do lern\"\r\n                tasks={tasks}\r\n                removeTasks={removeTasks}\r\n                taskFilter={taskFilter}\r\n                prokladka={prokladka}\r\n                addTask={addTask}\r\n                changeCheckboxStatus={changeCheckboxStatus}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}