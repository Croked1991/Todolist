{"ast":null,"code":"var _jsxFileName = \"/Users/egortihomirov/Desktop/IT/react/todolist_project/src/Todolist.tsx\";\nimport React from 'react';\nimport { useState } from 'react';\nexport function Todolist(props) {\n  const [newTask, setNewTask] = useState('');\n\n  const onClickHandler = () => {\n    props.addTask(newTask);\n    setNewTask('');\n  };\n\n  const onKeyPressHadler = event => {\n    if (event.key === 'Enter') {\n      onClickHandler();\n    }\n  };\n\n  const setNewTaskHandler = event => {\n    setNewTask(event.currentTarget.value);\n  };\n\n  const removeTaskHandler = elid => {\n    props.removeTasks(elid);\n  };\n\n  const filterHandler = filterValue => {\n    console.log('hellk');\n    props.taskFilter(filterValue);\n  };\n\n  const checkboxHandler = (elId, currentEvent) => {\n    props.changeCheckboxStatus(elId, currentEvent);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newTask,\n    onKeyPress: onKeyPressHadler,\n    onChange: setNewTaskHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, props.prokladka.map(el => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: el.isDone,\n      onChange: event => checkboxHandler(el.id, event.currentTarget.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, el.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => removeTaskHandler(el.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, \"X\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => filterHandler('All'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => filterHandler('Active'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => filterHandler('Completed'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Completed\"))));\n}","map":{"version":3,"sources":["/Users/egortihomirov/Desktop/IT/react/todolist_project/src/Todolist.tsx"],"names":["React","useState","Todolist","props","newTask","setNewTask","onClickHandler","addTask","onKeyPressHadler","event","key","setNewTaskHandler","currentTarget","value","removeTaskHandler","elid","removeTasks","filterHandler","filterValue","console","log","taskFilter","checkboxHandler","elId","currentEvent","changeCheckboxStatus","title","prokladka","map","el","id","isDone","checked"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, KeyboardEvent, ChangeEvent} from 'react';\n\nexport type TaskType = {\n    title: string;\n    id: string;\n    isDone: boolean;\n}\n\ntype PropsType = {\n    title: string;\n    tasks: Array<TaskType>;\n    removeTasks: (id: string) => void;\n    taskFilter: (filterValue: string) => void;\n    prokladka: Array<TaskType>;\n    addTask: (newTask: string) => void;\n    changeCheckboxStatus: (currentId: string, eventStatus: boolean) => void\n}\n\nexport function Todolist(props: PropsType) {\n\n    const [newTask, setNewTask] = useState('')\n\n    const onClickHandler = () => {\n        props.addTask(newTask)\n        setNewTask('')\n    }\n\n    const onKeyPressHadler = (event: KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            onClickHandler()\n        }\n    }\n\n    const setNewTaskHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        setNewTask(event.currentTarget.value)\n    }\n\n    const removeTaskHandler = (elid: string) => {\n        props.removeTasks(elid)\n    }\n\n    const filterHandler = (filterValue: string) => {\n        console.log('hellk');\n        \n        props.taskFilter(filterValue)\n    }\n\n\n    const checkboxHandler = (elId: string, currentEvent: boolean) => {\n        props.changeCheckboxStatus(elId, currentEvent)\n    }\n\n    return (\n        <div className=\"App\">\n            <div>\n                <h3>{props.title}</h3>\n                <div>\n                    <input value={newTask}\n                        onKeyPress={onKeyPressHadler}\n                        onChange={setNewTaskHandler}\n                    />\n                    <button onClick={onClickHandler}>+</button>\n                </div>\n                <ul>\n                    {props.prokladka.map((el: TaskType) => {\n                        return (\n                            <li key={el.id}>\n                                <input type=\"checkbox\" checked={el.isDone} onChange={(event) => checkboxHandler(el.id, event.currentTarget.checked)}></input>\n                                <span>{el.title}</span>\n                                <button onClick={() => removeTaskHandler(el.id)}>X</button>\n                            </li>\n                        )\n                    })}\n                </ul>\n                <div>\n                    <button onClick={() => filterHandler('All')}>All</button>\n                    <button onClick={() => filterHandler('Active')}>Active</button>\n                    <button onClick={() => filterHandler('Completed')}>Completed</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}