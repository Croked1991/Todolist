{"ast":null,"code":"var _jsxFileName = \"/Users/egortihomirov/Desktop/IT/react/todolist_project/src/App.tsx\";\nimport React, { useState } from 'react';\nimport { v1 } from 'uuid';\nimport './App.css';\nimport { Todolist } from './Todolist';\n\nfunction App() {\n  const [collapsed, setCollapsed] = useState(true);\n  let accordeonState = [{\n    title: 'Title1'\n  }, {\n    title: 'Title2'\n  }, {\n    title: 'Title3'\n  }, {\n    title: 'Title4'\n  }];\n  const buttons = [{\n    id: v1(),\n    title: 'All'\n  }, {\n    id: v1(),\n    title: 'Completed'\n  }, {\n    id: v1(),\n    title: 'Active'\n  }];\n  const [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"React\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest Api\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  const [filterButton, setFilterButton] = useState('All');\n\n  const removeTasks = id => {\n    let filtered = tasks.filter(el => el.id !== id);\n    setTasks(filtered);\n  };\n\n  const addTask = newTask => {\n    let newTitle = {\n      id: v1(),\n      title: newTask,\n      isDone: false\n    };\n    setTasks([newTitle, ...tasks]);\n  };\n\n  const taskFilter = filterValue => {\n    setFilterButton(filterValue);\n  };\n\n  const changeCheckboxStatus = (currentId, currentEvent) => {\n    setTasks(tasks.map(el => el.id === currentId ? { ...el,\n      isDone: currentEvent\n    } : el));\n  };\n\n  let prokladka = tasks;\n\n  if (filterButton === 'Active') {\n    prokladka = tasks.filter(el => el.isDone === false);\n  }\n\n  if (filterButton === 'Completed') {\n    prokladka = tasks.filter(el => el.isDone === true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Todolist, {\n    title: \"What do lern\",\n    tasks: tasks,\n    removeTasks: removeTasks,\n    taskFilter: taskFilter,\n    prokladka: prokladka,\n    addTask: addTask,\n    changeCheckboxStatus: changeCheckboxStatus,\n    filterButton: filterButton,\n    buttons: buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/egortihomirov/Desktop/IT/react/todolist_project/src/App.tsx"],"names":["React","useState","v1","Todolist","App","collapsed","setCollapsed","accordeonState","title","buttons","id","tasks","setTasks","isDone","filterButton","setFilterButton","removeTasks","filtered","filter","el","addTask","newTask","newTitle","taskFilter","filterValue","changeCheckboxStatus","currentId","currentEvent","map","prokladka"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { v1 } from 'uuid';\r\nimport './App.css';\r\nimport { Accordeon } from './components/Accordeon';\r\nimport { Todolist } from './Todolist';\r\n\r\nexport type FilterValuesType = string\r\nexport type AccordeonTitleType = {\r\n    title:string;\r\n}\r\n\r\n\r\nfunction App() {\r\n\r\n    const [collapsed, setCollapsed] = useState(true)\r\n\r\n    let accordeonState = [\r\n        {title: 'Title1'},\r\n        {title: 'Title2'},\r\n        {title: 'Title3'},\r\n        {title: 'Title4'},\r\n    ]\r\n\r\n    const buttons = [\r\n        { id: v1(), title: 'All' },\r\n        { id: v1(), title: 'Completed' },\r\n        { id: v1(), title: 'Active' }\r\n    ]\r\n\r\n\r\n    const [tasks, setTasks] = useState([\r\n        { id: v1(), title: \"CSS\", isDone: true },\r\n        { id: v1(), title: \"JS\", isDone: true },\r\n        { id: v1(), title: \"React\", isDone: false },\r\n        { id: v1(), title: \"Rest Api\", isDone: false },\r\n        { id: v1(), title: \"GraphQL\", isDone: false },\r\n    ])\r\n\r\n    const [filterButton, setFilterButton] = useState<FilterValuesType>('All')\r\n\r\n\r\n    const removeTasks = (id: string) => {\r\n        let filtered = tasks.filter(el => el.id !== id)\r\n        setTasks(filtered)\r\n    }\r\n\r\n    const addTask = (newTask: string) => {\r\n        let newTitle = { id: v1(), title: newTask, isDone: false }\r\n        setTasks([newTitle, ...tasks]);\r\n    }\r\n\r\n\r\n    const taskFilter = (filterValue: FilterValuesType) => {\r\n        setFilterButton(filterValue)\r\n    }\r\n\r\n    const changeCheckboxStatus = (currentId: string, currentEvent: boolean) => {\r\n        setTasks(tasks.map((el) => el.id === currentId ? { ...el, isDone: currentEvent } : el))\r\n    }\r\n\r\n\r\n    let prokladka = tasks\r\n    if (filterButton === 'Active') {\r\n        prokladka = tasks.filter(el => el.isDone === false)\r\n    }\r\n    if (filterButton === 'Completed') {\r\n        prokladka = tasks.filter(el => el.isDone === true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <Todolist title=\"What do lern\"\r\n                tasks={tasks}\r\n                removeTasks={removeTasks}\r\n                taskFilter={taskFilter}\r\n                prokladka={prokladka}\r\n                addTask={addTask}\r\n                changeCheckboxStatus={changeCheckboxStatus}\r\n                filterButton={filterButton}\r\n                buttons={buttons}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}