{"ast":null,"code":"var _jsxFileName = \"/Users/egortihomirov/Desktop/IT/react/todolist_project/src/components/EditableSpan.tsx\";\nimport React, { useState } from \"react\";\nexport const EditableSpan = props => {\n  let [inputOrSpan, setInputOrSpan] = useState(false);\n  let [updateTitle, setUpdateTitle] = useState(props.title);\n\n  const onDoubleClickHandler = () => {\n    setInputOrSpan(true);\n  };\n\n  const onKeyPressHadler = event => {\n    if (event.key === 'Enter') {\n      setInputOrSpan(false);\n    }\n  };\n\n  const onBlurHandler = event => {\n    setInputOrSpan(false);\n  };\n\n  const setNewTaskHandler = event => {\n    setUpdateTitle(event.currentTarget.value);\n  };\n\n  return inputOrSpan ? /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: onKeyPressHadler,\n    autoFocus: true,\n    onBlur: onBlurHandler,\n    value: updateTitle,\n    onChange: setNewTaskHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    onDoubleClick: onDoubleClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }, props.title);\n};","map":{"version":3,"sources":["/Users/egortihomirov/Desktop/IT/react/todolist_project/src/components/EditableSpan.tsx"],"names":["React","useState","EditableSpan","props","inputOrSpan","setInputOrSpan","updateTitle","setUpdateTitle","title","onDoubleClickHandler","onKeyPressHadler","event","key","onBlurHandler","setNewTaskHandler","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAwE,OAAxE;AAOA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAA6B;AAIrD,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA5C;AACA,MAAI,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACE,KAAK,CAACK,KAAP,CAA5C;;AAGA,QAAMC,oBAAoB,GAAG,MAAM;AAC/BJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAFD;;AAIA,QAAMK,gBAAgB,GAAIC,KAAD,IAA4C;AACjE,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvBP,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GAJD;;AAMA,QAAMQ,aAAa,GAAIF,KAAD,IAAyC;AAC3DN,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAFD;;AAIA,QAAMS,iBAAiB,GAAIH,KAAD,IAA0C;AAChEJ,IAAAA,cAAc,CAACI,KAAK,CAACI,aAAN,CAAoBC,KAArB,CAAd;AACH,GAFD;;AAIA,SACAZ,WAAW,gBACT;AAAO,IAAA,UAAU,EAAEM,gBAAnB;AAAqC,IAAA,SAAS,MAA9C;AAAgD,IAAA,MAAM,EAAEG,aAAxD;AAAuE,IAAA,KAAK,EAAEP,WAA9E;AAA2F,IAAA,QAAQ,EAAEQ,iBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,gBAEJ;AAAM,IAAA,aAAa,EAAEL,oBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CN,KAAK,CAACK,KAAnD,CAHP;AAKH,CA/BM","sourcesContent":["import React, { useState, KeyboardEvent, FocusEvent, ChangeEvent } from \"react\";\n\ntype EditableSpanType = {\n    title: string\n    callback: (newTask: string)=>void\n}\n\nexport const EditableSpan = (props: EditableSpanType) => {\n\n\n    \n    let [inputOrSpan, setInputOrSpan] = useState(false)\n    let [updateTitle, setUpdateTitle] = useState(props.title)\n\n\n    const onDoubleClickHandler = () => {\n        setInputOrSpan(true)\n    }\n\n    const onKeyPressHadler = (event: KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            setInputOrSpan(false)\n        }\n    }\n\n    const onBlurHandler = (event: FocusEvent<HTMLInputElement>) => {\n        setInputOrSpan(false)\n    }\n\n    const setNewTaskHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        setUpdateTitle(event.currentTarget.value)  \n    }\n\n    return (\n    inputOrSpan\n    ? <input onKeyPress={onKeyPressHadler} autoFocus  onBlur={onBlurHandler} value={updateTitle} onChange={setNewTaskHandler}/>\n         : <span onDoubleClick={onDoubleClickHandler} >{props.title}</span>\n    )\n}"]},"metadata":{},"sourceType":"module"}