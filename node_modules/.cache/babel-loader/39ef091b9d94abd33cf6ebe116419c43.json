{"ast":null,"code":"var _jsxFileName = \"/Users/egortihomirov/Desktop/IT/react/it-incubator-todolist-ts-01/src/components/InputFull.tsx\";\nimport React, { useState } from \"react\";\nexport const InputFull = () => {\n  const [inTitle, setinTitle] = useState('');\n\n  const onChangeInputHandler = event => {\n    setinTitle(event.currentTarget.value);\n  };\n\n  console.log(inTitle);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onChangeInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: callWall => {\n      console.log('1');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"+\"));\n};","map":{"version":3,"sources":["/Users/egortihomirov/Desktop/IT/react/it-incubator-todolist-ts-01/src/components/InputFull.tsx"],"names":["React","useState","InputFull","inTitle","setinTitle","onChangeInputHandler","event","currentTarget","value","console","log","callWall"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAMA,OAAO,MAAMC,SAAkC,GAAG,MAAM;AACpD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMI,oBAAoB,GAAIC,KAAD,IAAgD;AACzEF,IAAAA,UAAU,CAACE,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAV;AACH,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,EAAEE,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,OAAO,EAAGM,QAAD,IAAc;AAACF,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAAiB,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CADJ;AAMH,CAhBM","sourcesContent":["import React, { useState } from \"react\"\n\ntype InputTaskType = {\n    inTitle: () => void;\n}\n\nexport const InputFull: React.FC<InputTaskType> = () => {\n    const [inTitle, setinTitle] = useState('')\n\n    const onChangeInputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setinTitle(event.currentTarget.value)\n    }\n    \n    console.log(inTitle)\n\n\n    return (\n        <div>\n            <input onChange={onChangeInputHandler} />\n            <button onClick={(callWall) => {console.log('1')}}>+</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}