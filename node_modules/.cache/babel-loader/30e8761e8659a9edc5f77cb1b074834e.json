{"ast":null,"code":"var _jsxFileName = \"/Users/egortihomirov/Desktop/IT/react/it-incubator-todolist-ts-01/src/App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\n\nfunction App() {\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"CSS\",\n    isDone: true\n  }, {\n    id: 2,\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: 3,\n    title: \"React\",\n    isDone: false\n  }, {\n    id: 4,\n    title: \"Rest Api\",\n    isDone: false\n  }, {\n    id: 5,\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n\n  const removeTasks = id => {\n    let filtered = tasks.filter(el => el.id != id);\n    setTasks(filtered);\n  }; // const [filterButton, setFilterButton] = useState('All')\n  // const taskFilter = (filterValue: string) => {\n  //     setFilterButton(filterValue)\n  // }\n  // let prokladka = tasks\n  // if (filterButton === 'Active') {\n  //     prokladka = tasks.filter(el => el.isDone === false)\n  // }\n  // if (filterButton === 'Complited') {\n  //     prokladka = tasks.filter(el => el.isDone === true)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Todolist, {\n    title: \"What do lern\",\n    tasks: tasks,\n    removeTasks: removeTasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/egortihomirov/Desktop/IT/react/it-incubator-todolist-ts-01/src/App.tsx"],"names":["React","useState","Todolist","App","tasks","setTasks","id","title","isDone","removeTasks","filtered","filter","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AAEA,SAASC,QAAT,QAAyB,YAAzB;;AAKA,SAASC,GAAT,GAAe;AAEX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAC/B;AAAEK,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,KAAhB;AAAuBC,IAAAA,MAAM,EAAE;AAA/B,GAD+B,EAE/B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,IAAhB;AAAsBC,IAAAA,MAAM,EAAE;AAA9B,GAF+B,EAG/B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,OAAhB;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAH+B,EAI/B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,UAAhB;AAA4BC,IAAAA,MAAM,EAAE;AAApC,GAJ+B,EAK/B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,SAAhB;AAA2BC,IAAAA,MAAM,EAAE;AAAnC,GAL+B,CAAD,CAAlC;;AAQA,QAAMC,WAAW,GAAIH,EAAD,IAAgB;AAChC,QAAII,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAaC,EAAE,IAAIA,EAAE,CAACN,EAAH,IAASA,EAA5B,CAAf;AACAD,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,GAHD,CAVW,CAiBX;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,cAAhB;AACI,IAAA,KAAK,EAAEN,KADX;AAEI,IAAA,WAAW,EAAEK,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAOH;;AAED,eAAeN,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { Header } from './components/Header';\r\nimport { Todolist } from './Todolist';\r\nimport { TaskType } from './Todolist';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    const [tasks, setTasks] = useState([\r\n        { id: 1, title: \"CSS\", isDone: true },\r\n        { id: 2, title: \"JS\", isDone: true },\r\n        { id: 3, title: \"React\", isDone: false },\r\n        { id: 4, title: \"Rest Api\", isDone: false },\r\n        { id: 5, title: \"GraphQL\", isDone: false },\r\n    ])\r\n\r\n    const removeTasks = (id: number) => {\r\n        let filtered = tasks.filter(el => el.id != id)\r\n        setTasks(filtered)\r\n    }\r\n\r\n\r\n\r\n    // const [filterButton, setFilterButton] = useState('All')\r\n    // const taskFilter = (filterValue: string) => {\r\n    //     setFilterButton(filterValue)\r\n    // }\r\n\r\n    // let prokladka = tasks\r\n    // if (filterButton === 'Active') {\r\n    //     prokladka = tasks.filter(el => el.isDone === false)\r\n    // }\r\n    // if (filterButton === 'Complited') {\r\n    //     prokladka = tasks.filter(el => el.isDone === true)\r\n    // }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist title=\"What do lern\"\r\n                tasks={tasks}\r\n                removeTasks={removeTasks}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}