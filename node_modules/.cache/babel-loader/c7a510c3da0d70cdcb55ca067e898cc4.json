{"ast":null,"code":"var _jsxFileName = \"/Users/egortihomirov/Desktop/IT/react/todolist_project/src/Todolist.tsx\";\nimport React from 'react';\nimport { useState } from 'react';\nexport function Todolist(props) {\n  const [newTask, setNewTask] = useState('');\n\n  const onClickHandler = () => {\n    props.addTask(newTask);\n    setNewTask('');\n  };\n\n  const onKeyPressHadler = event => {\n    if (event.key === 'Enter') {\n      onClickHandler();\n    }\n  };\n\n  const setNewTaskHandler = event => {\n    setNewTask(event.currentTarget.value);\n  }; // const removeTaskHandler = (event:MouseEvent<HTMLButtonElement>) => {\n  //     props.removeTasks()\n  // }\n\n\n  const removeTaskFilter = event => {\n    props.taskFilter('All');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newTask,\n    onKeyPress: onKeyPressHadler,\n    onChange: setNewTaskHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, props.prokladka.map(el => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: el.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, el.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        props.removeTasks(el.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, \"X\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: removeTaskFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.taskFilter('Active'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.taskFilter('Complited'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Completed\"))));\n}","map":{"version":3,"sources":["/Users/egortihomirov/Desktop/IT/react/todolist_project/src/Todolist.tsx"],"names":["React","useState","Todolist","props","newTask","setNewTask","onClickHandler","addTask","onKeyPressHadler","event","key","setNewTaskHandler","currentTarget","value","removeTaskFilter","taskFilter","title","prokladka","map","el","id","isDone","removeTasks"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAiE,OAAjE;AAkBA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAoC;AAEvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMK,cAAc,GAAG,MAAM;AACzBH,IAAAA,KAAK,CAACI,OAAN,CAAcH,OAAd;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAHD;;AAKA,QAAMG,gBAAgB,GAAIC,KAAD,IAA4C;AACjE,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvBJ,MAAAA,cAAc;AACjB;AACJ,GAJD;;AAMA,QAAMK,iBAAiB,GAAIF,KAAD,IAA0C;AAChEJ,IAAAA,UAAU,CAACI,KAAK,CAACG,aAAN,CAAoBC,KAArB,CAAV;AACH,GAFD,CAfuC,CAmBvC;AACA;AACA;;;AAEA,QAAMC,gBAAgB,GAAIL,KAAD,IAAyC;AAC9DN,IAAAA,KAAK,CAACY,UAAN,CAAiB,KAAjB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,KAAK,CAACa,KAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAEZ,OAAd;AACI,IAAA,UAAU,EAAEI,gBADhB;AAEI,IAAA,QAAQ,EAAEG,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAQ,IAAA,OAAO,EAAEL,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ,CAFJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACc,SAAN,CAAgBC,GAAhB,CAAqBC,EAAD,IAAkB;AACnC,wBACI;AAAI,MAAA,GAAG,EAAEA,EAAE,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAED,EAAE,CAACE,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,EAAE,CAACH,KAAV,CAFJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEb,QAAAA,KAAK,CAACmB,WAAN,CAAkBH,EAAE,CAACC,EAArB;AAA0B,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,CADJ;AAQH,GATA,CADL,CATJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEN,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAQ,IAAA,OAAO,EAAE,MAAMX,KAAK,CAACY,UAAN,CAAiB,QAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAMZ,KAAK,CAACY,UAAN,CAAiB,WAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CArBJ,CADJ,CADJ;AA+BH","sourcesContent":["import { type } from 'os';\nimport React from 'react';\nimport { useState, KeyboardEvent, ChangeEvent, MouseEvent } from 'react';\nimport { v1 } from 'uuid';\n\nexport type TaskType = {\n    title: string;\n    id: string;\n    isDone: boolean;\n}\n\ntype PropsType = {\n    title: string;\n    tasks: Array<TaskType>;\n    removeTasks: (id: string) => void;\n    taskFilter: (filterValue: string) => void;\n    prokladka: Array<TaskType>;\n    addTask: (newTask: string) => void;\n}\n\nexport function Todolist(props: PropsType) {\n\n    const [newTask, setNewTask] = useState('')\n\n    const onClickHandler = () => {\n        props.addTask(newTask)\n        setNewTask('')\n    }\n\n    const onKeyPressHadler = (event: KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            onClickHandler()\n        }\n    }\n\n    const setNewTaskHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        setNewTask(event.currentTarget.value)\n    }\n\n    // const removeTaskHandler = (event:MouseEvent<HTMLButtonElement>) => {\n    //     props.removeTasks()\n    // }\n\n    const removeTaskFilter = (event:MouseEvent<HTMLButtonElement>) => {\n        props.taskFilter('All')\n    }\n\n    return (\n        <div className=\"App\">\n            <div>\n                <h3>{props.title}</h3>\n                <div>\n                    <input value={newTask}\n                        onKeyPress={onKeyPressHadler}\n                        onChange={setNewTaskHandler}\n                    />\n                    <button onClick={onClickHandler}>+</button>\n                </div>\n                <ul>\n                    {props.prokladka.map((el: TaskType) => {\n                        return (\n                            <li key={el.id}>\n                                <input type=\"checkbox\" checked={el.isDone}></input>\n                                <span>{el.title}</span>\n                                {/* <button onClick={removeTaskHandler}>X</button> */}\n                                <button onClick={() => { props.removeTasks(el.id) }}>X</button>\n                            </li>\n                        )\n                    })}\n                </ul>\n                <div>\n                    <button onClick={removeTaskFilter}>All</button>\n                    <button onClick={() => props.taskFilter('Active')}>Active</button>\n                    <button onClick={() => props.taskFilter('Complited')}>Completed</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}