{"ast":null,"code":"var _jsxFileName = \"/Users/egortihomirov/Desktop/IT/react/it-incubator-todolist-ts-01/src/components/InputTask.tsx\";\nimport React, { useState } from 'react';\nimport { Button } from './Button';\nimport { Justinput } from './Justinput';\nexport const InputTask = () => {\n  let [messages, setMessages] = useState([{\n    message: 'Message1'\n  }, {\n    message: 'Message2'\n  }, {\n    message: 'Message3'\n  }]);\n\n  const addMessage = inTitle => {\n    let newMessage = {\n      message: inTitle\n    };\n    setMessages([newMessage, ...messages]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Justinput, {\n    setinTitle: setinTitle,\n    inTitle: inTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: '+',\n    callback: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), messages.map((el, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }\n    }, el.message);\n  }));\n};","map":{"version":3,"sources":["/Users/egortihomirov/Desktop/IT/react/it-incubator-todolist-ts-01/src/components/InputTask.tsx"],"names":["React","useState","Button","Justinput","InputTask","messages","setMessages","message","addMessage","inTitle","newMessage","setinTitle","map","el","index"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAMA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAE3B,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,CACnC;AAAEM,IAAAA,OAAO,EAAE;AAAX,GADmC,EAEnC;AAAEA,IAAAA,OAAO,EAAE;AAAX,GAFmC,EAGnC;AAAEA,IAAAA,OAAO,EAAE;AAAX,GAHmC,CAAD,CAAtC;;AAQJ,QAAMC,UAAU,GAAIC,OAAD,IAAoB;AACnC,QAAIC,UAAU,GAAG;AAACH,MAAAA,OAAO,EAAEE;AAAV,KAAjB;AACAH,IAAAA,WAAW,CAAC,CAACI,UAAD,EAAa,GAAGL,QAAhB,CAAD,CAAX;AACH,GAHD;;AAKI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEM,UAAvB;AAAmC,IAAA,OAAO,EAAEF,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,GAAd;AAAmB,IAAA,QAAQ,EAAE,MAAI,CAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKJ,QAAQ,CAACO,GAAT,CAAa,CAACC,EAAD,EAAKC,KAAL,KAAe;AACzB,wBAAO;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBD,EAAE,CAACN,OAArB,CAAP;AACH,GAFA,CAHL,CADJ;AAUH,CAzBM","sourcesContent":["import { title } from 'process';\nimport React, { useState } from 'react';\nimport { Button } from './Button';\nimport { InputFull } from './InputFull';\nimport { Justinput } from './Justinput';\n\n\n\n\n\nexport const InputTask = () => {\n\n    let [messages, setMessages] = useState([\n        { message: 'Message1' },\n        { message: 'Message2' },\n        { message: 'Message3' },\n    ])\n\n\n\nconst addMessage = (inTitle:string) => {\n    let newMessage = {message: inTitle};\n    setMessages([newMessage, ...messages] )\n}\n\n    return (\n        <div>\n            <Justinput setinTitle={setinTitle} inTitle={inTitle}/>\n            <Button name={'+'} callback={()=>{}}/>\n            {messages.map((el, index) => {\n                return <div key={index}>{el.message}</div>\n            }\n            )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}