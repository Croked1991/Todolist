{"ast":null,"code":"var _jsxFileName = \"/Users/egortihomirov/Desktop/IT/react/it-incubator-todolist-ts-01/src/components/Input.tsx\";\nimport React, { useState } from 'react';\nimport { InputFull } from './InputFull';\nexport const InputTask = () => {\n  let [messages, setmessage] = useState([{\n    message: 'Message1'\n  }, {\n    message: 'Message2'\n  }, {\n    message: 'Message3'\n  }]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputFull, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), messages.map((el, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 24\n      }\n    }, el.message);\n  }));\n};","map":{"version":3,"sources":["/Users/egortihomirov/Desktop/IT/react/it-incubator-todolist-ts-01/src/components/Input.tsx"],"names":["React","useState","InputFull","InputTask","messages","setmessage","message","map","el","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAMA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAE3B,MAAI,CAACC,QAAD,EAAWC,UAAX,IAAyBJ,QAAQ,CAAC,CAClC;AAAEK,IAAAA,OAAO,EAAE;AAAX,GADkC,EAElC;AAAEA,IAAAA,OAAO,EAAE;AAAX,GAFkC,EAGlC;AAAEA,IAAAA,OAAO,EAAE;AAAX,GAHkC,CAAD,CAArC;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKF,QAAQ,CAACG,GAAT,CAAa,CAACC,EAAD,EAAKC,KAAL,KAAe;AACzB,wBAAO;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBD,EAAE,CAACF,OAArB,CAAP;AACH,GAFA,CAFL,CADJ;AASH,CAjBM","sourcesContent":["import React, { useState } from 'react';\nimport { InputFull } from './InputFull';\n\n\n\n\n\nexport const InputTask = () => {\n\n    let [messages, setmessage] = useState([\n        { message: 'Message1' },\n        { message: 'Message2' },\n        { message: 'Message3' },\n    ])\n\n    return (\n        <div>\n            <InputFull />\n            {messages.map((el, index) => {\n                return <div key={index}>{el.message}</div>\n            }\n            )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}